-- On installe uniquement les release BuildForge et les param sql, pas les RDD ni les Pactables
SELECT DISTINCT RELEASE_NAME.REL_ID, UNITE_DE_LIVRAISON.UNI_ID, UNITE_DE_LIVRAISON.UNI_ULHT, RELEASE_NAME.REL_VERSION
FROM TECHNOLOGIE
INNER JOIN (
    COMPOSANT
    INNER JOIN (
        UNITE_DE_LIVRAISON
        INNER JOIN RELEASE_NAME ON UNITE_DE_LIVRAISON.UNI_ID = RELEASE_NAME.UNI_ID
    ) ON COMPOSANT.COM_ID = UNITE_DE_LIVRAISON.COM_ID
) ON TECHNOLOGIE.TEC_ID = UNITE_DE_LIVRAISON.TEC_ID
WHERE TEC_NOM <> "PAC" AND COM_NOM <> "RDD"
AND VER_ID IN
(
    -- Liste des applis installées sur un couloir donné
    SELECT VERSION.VER_ID
    FROM APPLICATION
    INNER JOIN (
        QUADRIGRAMME as QUADRI
        INNER JOIN (
            COULOIR
            INNER JOIN (
                (
                    VERSION_APPLICATION as VERSION
                    INNER JOIN (
                        UNITE_DE_LIVRAISON
                        INNER JOIN (
                            RELEASE_NAME
                            INNER JOIN (
                                BESOIN
                                INNER JOIN
                                    CONCERNE ON BESOIN.BES_ID = CONCERNE.BES_ID
                            ) ON RELEASE_NAME.REL_ID = CONCERNE.REL_ID
                        ) ON UNITE_DE_LIVRAISON.UNI_ID = RELEASE_NAME.UNI_ID
                    ) ON VERSION.VER_ID = RELEASE_NAME.VER_ID
                )
                INNER JOIN TRAITE ON BESOIN.BES_ID = TRAITE.BES_ID
            ) ON COULOIR.COU_ID = TRAITE.COU_ID
        ) ON QUADRI.QUA_ID = UNITE_DE_LIVRAISON.QUA_ID
    ) ON APPLICATION.APP_ID = VERSION.APP_ID
    WHERE COULOIR.COU_ID = [couloir_source]
    AND VERSION.VER_VERSION > ALL -- On vérifie que l'appli source est plus récente que l'appli cible
    (
        -- Liste des versions d'une appli donnée sur un couloir
        SELECT VERSION_APPLICATION.VER_VERSION
        FROM COULOIR INNER JOIN ((APPLICATION INNER JOIN (VERSION_APPLICATION INNER JOIN (RELEASE_NAME INNER JOIN (BESOIN INNER JOIN CONCERNE ON BESOIN.BES_ID = CONCERNE.BES_ID) ON RELEASE_NAME.REL_ID = CONCERNE.REL_ID) ON VERSION_APPLICATION.VER_ID = RELEASE_NAME.VER_ID) ON APPLICATION.APP_ID = VERSION_APPLICATION.APP_ID) INNER JOIN TRAITE ON BESOIN.BES_ID = TRAITE.BES_ID) ON COULOIR.COU_ID = TRAITE.COU_ID
        WHERE APPLICATION.APP_ID = VERSION.APP_ID
        AND COULOIR.COU_ID = [couloir_cible]
    )
    AND EXISTS
    (
        -- Determine si l'application est également sur le couloir cible ou non
        SELECT *
        FROM UNITE_DE_LIVRAISON INNER JOIN (APPLICATION INNER JOIN (COULOIR INNER JOIN ((VERSION_APPLICATION INNER JOIN (RELEASE_NAME INNER JOIN (BESOIN INNER JOIN CONCERNE ON BESOIN.BES_ID = CONCERNE.BES_ID) ON RELEASE_NAME.REL_ID = CONCERNE.REL_ID) ON VERSION_APPLICATION.VER_ID = RELEASE_NAME.VER_ID) INNER JOIN TRAITE ON BESOIN.BES_ID = TRAITE.BES_ID) ON COULOIR.COU_ID = TRAITE.COU_ID) ON APPLICATION.APP_ID = VERSION_APPLICATION.APP_ID) ON UNITE_DE_LIVRAISON.UNI_ID = RELEASE_NAME.UNI_ID        WHERE VERSION_APPLICATION.APP_ID = VERSION.APP_ID
        AND UNITE_DE_LIVRAISON.QUA_ID = QUADRI.QUA_ID
        AND COULOIR.COU_ID = [couloir_cible]
    )
    AND QUADRI.QUA_NOM In
    (
        -- Liste des quadrigrammes principaux de chaque appli
        SELECT DISTINCT QUADRIGRAMME.QUA_NOM FROM QUADRIGRAMME INNER JOIN QUADRI_PRINCIPAL ON QUADRIGRAMME.QUA_ID = QUADRI_PRINCIPAL.QUA_ID
    )
)